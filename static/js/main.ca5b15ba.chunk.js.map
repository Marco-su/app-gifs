{"version":3,"sources":["components/Gif.jsx","constants/const.js","helpers/getGifs.js","views/DefaultGifs.jsx","views/GifsList.jsx","helpers/intersectionObserver.js","views/404.jsx","views/SingleGif.jsx","views/SiteInfo.jsx","routes/Routes.jsx","components/TrendingTerms.jsx","components/Navbar.jsx","components/SearchForm.jsx","App.jsx","index.js"],"names":["Gif","id","src","alt","className","to","memo","API_URL","API_KEY","getGifs","keyword","page","a","axios","url","getTrendingGifs","getSingleGif","getTrendingTerm","DefaultGifs","useState","trendingGifs","setTrendingGifs","errorGifs","setErrorGifs","useEffect","abortController","AbortController","then","res","data","catch","err","abort","map","gif","images","fixed_width","title","GifsList","observedElement","useRef","term","useParams","gifs","setGifs","setPage","readyForInfScroll","setReadyForInfScroll","allowNextPage","setAllowNextPage","initialParam","setInitialParam","errorSearching","setErrorSearching","intersecting","elementRef","isReadyToObserve","isIntersecting","setIsIntersecting","onChange","entries","observer","IntersectionObserver","rootMargin","observe","current","IsIntersecting","prevGifs","concat","setTimeout","length","prev","ref","ErrorPage","SingleGif","setGif","errorGif","setErrorGif","gifId","console","log","downsized_large","SiteInfo","MyRoutes","exact","path","component","TrendingTerms","trendingTerms","setTrendingTerms","errorTerms","setErrorTerms","MainHeader","withRouter","props","history","setKeyword","onSubmit","e","preventDefault","push","type","placeholder","target","value","required","App","Navbar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca5b15ba.chunk.js","sourcesContent":["import { memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Gif = ({ id, src, alt }) => {\r\n  return (\r\n    <figure className=\"gif-container\">\r\n      <Link to={`/gif/${id}`}>\r\n        <img className=\"gif-image img-thumbnail\" src={src} alt={alt} />\r\n      </Link>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default memo(Gif);\r\n","export const API_URL = \"https://api.giphy.com/v1/\";\r\nexport const API_KEY = \"api_key=FGiquhH5DDjcjIZkZL2zxIA9UqXnGR3A\";\r\n","import axios from \"axios\";\r\nimport { API_KEY, API_URL } from \"../constants/const\";\r\n\r\n//---Get searched gifs\r\nexport const getGifs = async (keyword, page) => {\r\n  return await axios({\r\n    url: `${API_URL}gifs/search?${API_KEY}&q=${keyword}&limit=20&offset=${\r\n      20 * page\r\n    }&rating=g&lang=en`,\r\n  });\r\n};\r\n\r\n//---Get trending gifs\r\nexport const getTrendingGifs = async () => {\r\n  return await axios({\r\n    url: `${API_URL}gifs/trending?${API_KEY}&limit=20&rating=g`,\r\n  });\r\n};\r\n\r\n//---Get single gif\r\nexport const getSingleGif = async (id) => {\r\n  return await axios({\r\n    url: `${API_URL}gifs/${id}?${API_KEY}`,\r\n  });\r\n};\r\n\r\n//---Get trending term\r\nexport const getTrendingTerm = async () => {\r\n  return await axios({\r\n    url: `${API_URL}trending/searches?${API_KEY}`,\r\n  });\r\n};\r\n","//---Imports\r\nimport { useState, useEffect } from \"react\";\r\nimport Gif from \"../components/Gif\";\r\nimport { getTrendingGifs } from \"../helpers/getGifs\";\r\n\r\nconst DefaultGifs = () => {\r\n  //---States\r\n  const [trendingGifs, setTrendingGifs] = useState([]);\r\n  const [errorGifs, setErrorGifs] = useState(null);\r\n\r\n  //---Get gifs\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    getTrendingGifs()\r\n      .then((res) => setTrendingGifs(res.data.data))\r\n      .catch((err) => setErrorGifs(err));\r\n\r\n    return () => abortController.abort();\r\n  }, []);\r\n\r\n  //---Render\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"loaded-gifs col-md-10 offset-md-1\">\r\n        {errorGifs ? (\r\n          <span className=\"error-loading-gifs\">Error loading gifs.</span>\r\n        ) : (\r\n          trendingGifs.map((gif) => (\r\n            <Gif\r\n              key={gif.id}\r\n              id={gif.id}\r\n              src={gif.images.fixed_width.url}\r\n              alt={gif.title}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//---Export\r\nexport default DefaultGifs;\r\n","//---Imports\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nimport { IsIntersecting } from \"../helpers/intersectionObserver\";\r\nimport Gif from \"../components/Gif\";\r\n\r\nconst GifsList = () => {\r\n  const observedElement = useRef();\r\n\r\n  //---Get param\r\n  const { term } = useParams();\r\n\r\n  //---States\r\n  const [gifs, setGifs] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [readyForInfScroll, setReadyForInfScroll] = useState(false);\r\n  const [allowNextPage, setAllowNextPage] = useState(false);\r\n  const [initialParam, setInitialParam] = useState(term);\r\n  const [errorSearching, setErrorSearching] = useState(null);\r\n\r\n  const intersecting = IsIntersecting(observedElement, readyForInfScroll);\r\n\r\n  if (initialParam !== term) {\r\n    setGifs([]);\r\n    setInitialParam(term);\r\n  }\r\n\r\n  //---Getting gifs\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    setReadyForInfScroll(false);\r\n\r\n    getGifs(term, page)\r\n      .then((res) => {\r\n        setGifs((prevGifs) => prevGifs.concat(res.data.data));\r\n\r\n        setTimeout(() => {\r\n          setReadyForInfScroll(true);\r\n\r\n          res.data.data.length < 20\r\n            ? setAllowNextPage(false)\r\n            : setAllowNextPage(true);\r\n        }, 1000);\r\n      })\r\n\r\n      .catch((err) => {\r\n        setErrorSearching(err);\r\n        setReadyForInfScroll(false);\r\n      });\r\n\r\n    return () => abortController.abort();\r\n  }, [term, page]);\r\n\r\n  //---Config next page authorization\r\n  useEffect(() => {\r\n    if (intersecting && readyForInfScroll && allowNextPage) {\r\n      setPage((prev) => prev + 1);\r\n      setAllowNextPage(false);\r\n    }\r\n  }, [intersecting, readyForInfScroll, allowNextPage]);\r\n\r\n  //---Render\r\n  return (\r\n    <div id=\"gifs-list\">\r\n      <h3 className=\"term\">{term}</h3>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"loaded-gifs col-md-10 offset-md-1\">\r\n          {errorSearching ? (\r\n            <span className=\"error-loading-gifs\">Error loading gifs</span>\r\n          ) : (\r\n            gifs.map((gif) => (\r\n              <Gif\r\n                key={gif.id}\r\n                id={gif.id}\r\n                src={gif.images.fixed_width.url}\r\n                alt={gif.title}\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {gifs.length === 0 && readyForInfScroll ? (\r\n        <h3 className=\"h4 mt-4 text-center\">\r\n          Sorry, no gifs were found for your search.\r\n        </h3>\r\n      ) : null}\r\n\r\n      <div ref={observedElement}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n//---Export\r\nexport default GifsList;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const IsIntersecting = (elementRef, isReadyToObserve) => {\r\n  const [isIntersecting, setIsIntersecting] = useState(false);\r\n\r\n  const onChange = (entries, observer) => {\r\n    const element = entries[0];\r\n    element.isIntersecting ? setIsIntersecting(true) : setIsIntersecting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (elementRef && isReadyToObserve) {\r\n      const observer = new IntersectionObserver(onChange, {\r\n        rootMargin: \"0px\",\r\n      });\r\n      observer.observe(elementRef.current);\r\n    }\r\n  }, [elementRef, isReadyToObserve]);\r\n\r\n  return isIntersecting;\r\n};\r\n","const ErrorPage = () => {\r\n  return (\r\n    <div id=\"error-404\">\r\n      <h2 className=\"text-center\">Error 404: page not found</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getSingleGif } from \"../helpers/getGifs\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst SingleGif = () => {\r\n  const [gif, setGif] = useState({});\r\n  const [errorGif, setErrorGif] = useState(null);\r\n  const { gifId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    getSingleGif(gifId)\r\n      .then((res) => setGif(res.data.data))\r\n      .catch((err) => {\r\n        setErrorGif(true);\r\n        console.log(err);\r\n      });\r\n\r\n    return () => abortController.abort();\r\n  }, [gifId]);\r\n\r\n  return (\r\n    <div id=\"single-gif\">\r\n      {gif.id ? (\r\n        <>\r\n          <h2 className=\"mb-4 h4\">{gif.title}</h2>\r\n          <figure>\r\n            <img src={gif.images.downsized_large.url} alt={gif.title} />\r\n          </figure>\r\n        </>\r\n      ) : null}\r\n\r\n      {errorGif ? (\r\n        <span className=\"error-loading-gifs\">Error loading this gif.</span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleGif;\r\n","const SiteInfo = () => {\r\n  return (\r\n    <div className=\"site-info\">\r\n      <h2 className=\"h4\">About the site</h2>\r\n\r\n      <p>\r\n        This site was created in ReactJS using the Giphy API, in order to show\r\n        the use of calls to external API's in a practical and simple way.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteInfo;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport DefaultGifs from \"../views/DefaultGifs\";\r\nimport GifsList from \"../views/GifsList\";\r\nimport ErrorPage from \"../views/404\";\r\nimport SingleGif from \"../views/SingleGif\";\r\nimport SiteInfo from \"../views/SiteInfo\";\r\n\r\nconst MyRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={[\"/\", \"/app-gifs\"]} component={DefaultGifs} />\r\n      <Route path=\"/info\" component={SiteInfo} />\r\n      <Route path=\"/search/:term\" component={GifsList} />\r\n      <Route path=\"/gif/:gifId\" component={SingleGif} />\r\n      <Route path=\"*\" component={ErrorPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default MyRoutes;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getTrendingTerm } from \"../helpers/getGifs\";\r\n\r\nconst TrendingTerms = () => {\r\n  const [trendingTerms, setTrendingTerms] = useState([]);\r\n  const [errorTerms, setErrorTerms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getTrendingTerm()\r\n      .then((res) => setTrendingTerms(res.data.data))\r\n      .catch((err) => setErrorTerms(err));\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"trending-terms\">\r\n      {errorTerms ? null : (\r\n        <>\r\n          <h4>Trending</h4>\r\n\r\n          <div className=\"mb-3\">\r\n            <ul className=\"list-inline\">\r\n              {trendingTerms.map((term) => (\r\n                <li className=\"list-inline-item my-1\" key={term}>\r\n                  <Link\r\n                    className=\"term text-decoration-none rounded-1\"\r\n                    to={`/search/${term}`}\r\n                  >\r\n                    {term}\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrendingTerms;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst MainHeader = () => {\r\n  return (\r\n    <nav id=\"main-header\" className=\"py-2 mb-2\">\r\n      <div>\r\n        <Link className=\"h3 ms-4\" to=\"/\">\r\n          Many Gifs\r\n        </Link>\r\n      </div>\r\n\r\n      <div>\r\n        <Link className=\"h6 me-4\" to=\"/info\">\r\n          Site Info\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default MainHeader;\r\n","import { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst SearchForm = (props) => {\r\n  const { history } = props;\r\n\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const goTo = (e) => {\r\n    e.preventDefault();\r\n    history.push(`/search/${keyword}`);\r\n  };\r\n\r\n  return (\r\n    <div id=\"search-form\">\r\n      <form onSubmit={goTo}>\r\n        <input\r\n          className=\"form-control mb-3\"\r\n          type=\"search\"\r\n          placeholder=\"Search...\"\r\n          onChange={(e) => setKeyword(e.target.value)}\r\n          required\r\n        />\r\n        <button className=\"btn btn-success mb-3\">\r\n          <i className=\"fas fa-search\"></i>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SearchForm);\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/scss/App.scss\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport MyRoutes from \"./routes/Routes\";\r\nimport TrendingTerms from \"./components/TrendingTerms\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport SearchForm from \"./components/SearchForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Navbar />\r\n        <div className=\"container\">\r\n          <TrendingTerms />\r\n          <SearchForm />\r\n          <MyRoutes />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App.jsx\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}